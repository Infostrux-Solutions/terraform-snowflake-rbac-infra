name: Destroy Snowflake Infra
on:
  workflow_dispatch:
    inputs:
      targetEnvironment:
        type: choice
        description: Destroy to
        options: 
        - development
        - production
        required: true
        default: 'development'
      confirmDestroy:
        description: Type 'I WANT TO DESTROY EVERYTHING' to permanently delete everything.
        required: true
      logDebug:
        type: choice
        description: TF_LOG debug level
        options:
        - TRACE
        - 'OFF'
        required: true
        default: 'OFF'

jobs:
  Deploy:
    name: Destroy Terraform
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.targetEnvironment }}
    defaults:
      run:
        shell: bash
        working-directory: terraform/02-snowflake-infrastructure
    concurrency: infra-destroy
    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo

    steps:
    - uses: actions/checkout@v4.1.1

    - name: Destroy confirmation
      run: if [ "${{ github.event.inputs.confirmDestroy }}" != "I WANT TO DESTROY EVERYTHING" ]; then exit 1; fi

    - name: Set terraform environment variables
      run: |
        # ALL ENVS
        echo "TF_LOG=${{ github.event.inputs.logDebug }}" >> $GITHUB_ENV
        echo "BACKEND_ENCRYPT=true" >> $GITHUB_ENV
        echo "ENVIRONMENT=${{ github.event.inputs.targetEnvironment }}" >> $GITHUB_ENV
        echo "SNOWFLAKE_PRIVATE_KEY<<EOF" >> $GITHUB_ENV
        echo "${{ secrets.SNOWFLAKE_PRIVATE_KEY }}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-duration-seconds: 900
        aws-region: us-east-2

    - name: install terraform
      uses: hashicorp/setup-terraform@v3.0.0
      with:
        terraform_version: 1.2.4
        terraform_wrapper: false

    - name: Debug info
      if: github.event.inputs.logDebug == 'TRACE'
      run: |
        env
        git config --list
        pwd
        ls -la

    - name: Initialize Terraform
      run: |
        terraform init -backend-config="./backends/backend-$ENVIRONMENT.tfvars"

    - name: Format terraform
      run: terraform fmt -check

    - name: Validate terraform
      run: terraform validate

    - name: Destroy terraform
      run: |
        terraform destroy --var-file=./environments/$ENVIRONMENT.tfvars -auto-approve

